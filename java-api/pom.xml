<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>graphannis-api</artifactId>
  <name>graphANNIS API</name>
  <description>A wrapper around the C++ API of graphANNIS</description>
  
  <packaging>bundle</packaging>

  <parent>
    <groupId>org.corpus-tools</groupId>
    <artifactId>graphannis-root</artifactId>
    <version>0.4.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <native-libs-linux>${jna-platform-name}/libgraphannis_capi.so; 
      osname=Linux;processor=x86-64</native-libs-linux>

    <native-libs-windows>${jna-platform-name}/libgraphannis_capi.dll; 
      osname=Win32;processor=x86-64
    </native-libs-windows>

    <native-libs-macosx>${jna-platform-name}/libgraphannis_capi.dylib; 
      osname=MacOSX;processor=x86-64
    </native-libs-macosx>
    
  </properties>
  
  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <name>linux</name>
        </os>
      </activation>
      <properties>
        <bundle-native-libs>${native-libs-linux}</bundle-native-libs>
        <jna-platform-name>linux-x86-64</jna-platform-name>
      </properties>
    </profile>
    <profile>
      <id>macosx</id>
      <activation>
        <os>
          <name>mac os x</name>
        </os>
      </activation>
      <properties>
        <bundle-native-libs>${native-libs-macosx}</bundle-native-libs>
        <jna-platform-name>darwin-x86-64</jna-platform-name>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <bundle-native-libs>${native-libs-windows}</bundle-native-libs>
        <jna-platform-name>win32-x86-64</jna-platform-name>
      </properties>
    </profile>
    
    <profile>
      <id>release</id>
      <properties>
        <!-- all binaries must be present in release mode -->
        <bundle-native-libs>${native-libs-linux},${native-libs-macosx},${native-libs-windows}</bundle-native-libs>
      </properties>
    </profile>
    
  </profiles>


  <dependencies>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>4.5.1</version>
    </dependency>
    <dependency>
      <groupId>de.hu-berlin.german.korpling.annis</groupId>
      <artifactId>annis-interfaces</artifactId>
      <version>3.5.0-preview1</version>
    </dependency>
    <dependency>
      <groupId>org.corpus-tools</groupId>
      <artifactId>salt-api</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.corpus-tools</groupId>
      <artifactId>salt-extensions</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>4.5.2-1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    
    <!-- add a logger implementation for tests -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.1</version>
      <scope>test</scope>
    </dependency>

    
  </dependencies>
  
  
  <build>
    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/main/resources/${jna-platform-name}/</outputDirectory>
              <resources>          
                <resource>
                  <directory>${project.basedir}/../target/release/</directory>
                  <includes>                    
                    <include>libgraphannis_capi.so</include>
                  </includes>                  
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals> 
          </execution>
        </executions>
      </plugin>
      <plugin> 
        <artifactId>maven-javadoc-plugin</artifactId> 
        <version>2.10.4</version>
        <executions> 
          <execution> 
            <id>attach-javadocs</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar</goal>
            </goals> 
          </execution> 
        </executions> 
      </plugin>
      <plugin> 
        <artifactId>maven-deploy-plugin</artifactId> 
        <executions> 
          <execution> 
            <id>deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals> 
          </execution> 
        </executions> 
      </plugin>

      
      <plugin>   
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>3.2.0</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Import-Package>!org.apache.maven.*,*</Import-Package>
            <Bundle-NativeCode>${bundle-native-libs}</Bundle-NativeCode>
           
          </instructions>
          <niceManifest>true</niceManifest>          
        </configuration>

      </plugin>

      
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>4.5.2-1</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr4</goal>
            </goals>
            <configuration>
              <sourceDirectory>src/main/antlr4</sourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <argLine>-Djna.library.path=${project.basedir}/../target/release/</argLine>
        </configuration>
      </plugin>
    </plugins>

  </build>
</project>
